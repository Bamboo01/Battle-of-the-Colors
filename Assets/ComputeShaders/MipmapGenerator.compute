#pragma kernel CSMain
#define MAX_TEAMCOLORS 4

bool compareColor(float4 color1, float4 color2)
{
    return (
        (int)(color1.x * 255.0f) == (int)(color2.x * 255.0f) &&
        (int)(color1.y * 255.0f) == (int)(color2.y * 255.0f) &&
        (int)(color1.z * 255.0f) == (int)(color2.z * 255.0f)
    );
}

RWTexture2D<float4> cSourceTexture;
RWTexture2D<float4> cTargetTexture;
int cNumTeamColors;
float4 cTeamColors[MAX_TEAMCOLORS];

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 finalColor = float4(0,0,0,0);
    int teamColorCounters[MAX_TEAMCOLORS] = {0, 0, 0, 0};
    for (int x = 0; x < 2; x++)
    {
        for (int y = 0; y < 2; y++)
        {
            uint2 pixelPos = id.xy;
            pixelPos.x = (pixelPos.x * 2) + x;
            pixelPos.y = (pixelPos.y * 2) + y;

            float4 colorToCompare = cSourceTexture[pixelPos.xy];

            for (int i = 0; i < cNumTeamColors; i++)
            {
                if (compareColor(colorToCompare, cTeamColors[i]))
                {
                    teamColorCounters[i]++;
                }
            }
        }
    }

    int minCounter = 0;

    for (int i = 0; i < cNumTeamColors; i++)
    {
        if (teamColorCounters[i] > minCounter)
        {
            minCounter = teamColorCounters[i];
            finalColor = cTeamColors[i];
        }
    }

    cTargetTexture[id.xy] = finalColor;
}
